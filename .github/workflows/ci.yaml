name: CI

on:
  workflow_dispatch:
    inputs:
      envoyVersion:
        type: string
        description: "envoy version to run tests on, e.g. 'v1.24.0'. Special values: 'max' - max supported version, 'min' - min supported version"
        default: max

  push:
    paths-ignore:
      - 'readme.md'

  workflow_call:
    inputs:
      envoyVersion:
        type: string
        default: max

jobs:
  ci:
    name: CI
    runs-on: ubuntu-latest
    env:
      GRADLE_OPTS: '-Dfile.encoding=utf-8 -Dorg.gradle.daemon=false'

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: ${{ github.head_ref }}

      - uses: gradle/actions/wrapper-validation@v4

      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Test with Gradle (envoyVersion=${{ inputs.envoyVersion }})
        run: ./gradlew clean check -PenvoyVersion=${{ inputs.envoyVersion }}

      - name: Junit report
        uses: mikepenz/action-junit-report@v5
        if: always()
        with:
          report_paths: '**/build/test-results/test/TEST-*.xml'

      - name: Cleanup Gradle Cache
        run: |
          rm -f ~/.gradle/caches/modules-2/modules-2.lock
          rm -f ~/.gradle/caches/modules-2/gc.properties
