admin:
  access_log_path: /dev/null
  address:
    socket_address: { address: 0.0.0.0, port_value: 10000 }
dynamic_resources:
  cds_config:
    api_config_source:
      api_type: GRPC
      grpc_services:
        envoy_grpc:
          cluster_name: envoy-control-xds
node:
  cluster: test-cluster
  id: test-id
  metadata:
    proxy_settings:
      incoming:
        endpoints:
          - path: "/endpoint"
            clients: ["authorizedClient"]
      outgoing:
        dependencies:
          - service: "service-1"
          - service: "service-2"
          - service: "service-3"
          - service: "service-4"
          - service: "service-5"
          - service: "echo"
          - service: "consul"
          - service: "service-redirect"
            handleInternalRedirect: true
          - domain: "https://www.example.com"
          - domain: "https://www.example-redirect.com"
            handleInternalRedirect: true

static_resources:
  clusters:
  - connect_timeout: 1s
    hosts:
    - socket_address:
        address: HOST_IP
        port_value: HOST_PORT
    - socket_address:
        address: HOST_IP
        port_value: HOST2_PORT
    http2_protocol_options: {}
    name: envoy-control-xds
  - name: envoy-original-destination
    type: ORIGINAL_DST
    lb_policy: ORIGINAL_DST_LB
    original_dst_lb_config:
      use_http_header: true
    connect_timeout:
      seconds: 1
    http_protocol_options:
      allow_absolute_url: true
  - name: local_service
    type: STATIC
    hosts:
      - socket_address:
          address: LOCAL_SERVICE_IP
          port_value: 5678
    connect_timeout: 1s
  - name: this_admin
    type: STATIC
    hosts:
      - socket_address:
          address: 127.0.0.1
          port_value: 10000
    connect_timeout:
      seconds: 1
  listeners:
  - name: default_listener
    address:
      socket_address:
        address: 0.0.0.0
        port_value: 5000
    filter_chains:
      filters:
      - name: envoy.http_connection_manager
        config:
          stat_prefix: egress_http
          rds:
            route_config_name: default_routes
            config_source:
              api_config_source:
                api_type: GRPC
                grpc_services:
                - envoy_grpc:
                    cluster_name: envoy-control-xds
          http_filters:
          - name: envoy.filters.http.header_to_metadata
            config:
              request_rules:
                - header: x-canary
                  on_header_present:
                    metadata_namespace: envoy.lb
                    key: canary
                    type: STRING
                  remove: false
          - name: envoy.router
  - name: ingress_listener
    address:
      socket_address:
        address: 0.0.0.0
        port_value: 5001
    filter_chains:
      - filters:
          - name: envoy.http_connection_manager
            config:
              stat_prefix: ingress_http
              rds:
                route_config_name: ingress_secured_routes
                config_source:
                  api_config_source:
                    api_type: GRPC
                    grpc_services:
                      - envoy_grpc:
                          cluster_name: envoy-control-xds
              http_filters:
                - name: envoy.router